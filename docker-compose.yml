services:
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: petfinder-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - petfinder-minio-data:/data
      - ./minio_bootstrap_config:/root/.minio/certs
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
      - MINIO_DEFAULT_BUCKETS=petfinder-images

    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      retries: 5

  postgres-db:
    image: postgis/postgis:15-3.3-alpine
    container_name: petfinder-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=petFinder
    volumes:
      - petfinder-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d petFinder"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  app:
    build: .
    container_name: petfinder-app
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/petFinder
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1
    command: >
      java 
      -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 
      -jar app.jar
    depends_on:
      postgres-db:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  petfinder-db-data:
  petfinder-minio-data: